generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String  @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  userData UserData?
}

model UserData {
  userId String @id
  email String
  image String
  age String
  language String
  fullname String
  studyReason String
  learningMethod String
  subject String
  additional_context String?
  interviews Interview[]
  user User @relation(fields: [userId], references: [id])
}

model Interview {
  id                      String   @id @default(uuid())
  fullName                String
  subject                 String
  learningMethod          String
  additionalInformations  String
  createdAt               DateTime @default(now())
  questions               String
  userId                  String
  user                    UserData @relation(fields: [userId], references: [userId])
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @map("refreshToken")
  access_token       String?  @map("accessToken")
  expires_at         Int?     @map("expiresAt")
  token_type         String?  @map("tokenType")
  scope              String?
  id_token           String?  @map("idToken")
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}